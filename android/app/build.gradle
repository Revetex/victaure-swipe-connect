apply plugin: 'com.android.application'

android {
    namespace "com.victaure.app"
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.victaure.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Enable MultiDex
        multiDexEnabled true
        
        // APK signing configuration
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // APK Configuration
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        
        debug {
            debuggable true
            minifyEnabled false
            // Enable debug tools
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }
}

repositories {
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
    implementation "androidx.core:core:$androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    
    // Add MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'
    
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

// Task to generate APK automatically
task generateApk(type: Copy) {
    dependsOn 'assembleDebug'
    from('build/outputs/apk/debug/')
    into('../../dist/android/')
    include('app-debug.apk')
    rename('app-debug.apk', 'victaure.apk')
}

// Apply Google Services plugin if google-services.json exists
try {
    def servicesJson = file('google-services.json')
    if (servicesJson.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception) {
    logger.warn("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}